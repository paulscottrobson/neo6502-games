'
'	*** Atic Atac ***
'
call initialise.game()
call draw.room()
end


'
'		initialise game
'
proc initialise.game()
gload "aticatac.gfx"
	' initialise level and dimensions, power of 2, and put in the middle.
	level = 1:room.mask = 15:x.start = (room.mask+1) >> 1:y.start = x.start
	' door records, created when room entered.
	dim doors(3): ' $00 = wall,$C0-$C3 (cave) $C8-$CB (door) open/red/yellow/cyan 
	dim door.open(3): ' true if door is open, false if shut/wall.
	dim door.period(3): ' if 0 normal door, else period timer open/close
	dim door.timer(3): ' timer for door opening/closing
	' initialise player
	lives = 3:score = 0:x.room = x.start:y.room = y.start
	x.player = 128:y.player = 120
	dim key.count(3): ' key counts 1-3
endproc
'
'		Draw room
'
proc draw.room()
	local n
	cls:sprite clear
	ink 3:print chr$(20);x.room;",";y.room
	if level = 1:call draw.room.outline(2):else:call draw.room.outline(1):endif
	text "1 Up" dim 1 ink 3 to 277,4
	call draw.score():call draw.keys():call draw.energy()
	if lives > 0
		for n = 1 to lives
			image $D6 to (n-1)*16+258,54
		next
	endif
endproc
'
'		draw the energy bar
'
proc draw.energy()
	local w,y:y = 38:w = 63
	rect 256,y ink 1 solid to 256+w,y+12
	rect 256,y ink 7 frame to 319,y+12
endproc
'
'		draw the score
'
proc draw.score()
	text right$("00000"+str$(score),5) ink 6 dim 2 solid to 260,16
endproc
'
'		draw the keys
'
proc draw.keys()
	local i,x,y:y = 80
	rect 256,y+6 ink 0 to 319,y+40
	for i = 1 to 3:
		x = 256 + (i-1) * 21 - 5
		image $D9+i dim 1 frame to x,y
		text "00" to x+11,y + 24
	next
endproc
'
'		draw outline room type 1 (cave) type 2 (room)
'
proc draw.room.outline(type)
	cx = -1
	plot ink 7 to 128,129
	if type = 1
		call line.draw(0,50)
		call line.draw(12,56):call line.draw(24,49):call line.draw(40,57)
		call line.draw(52,52):call line.draw(47,35):call line.draw(55,15)
		call line.draw(50,0)
	else
		call line.draw(0,50)
		call line.draw(45,58)
		call line.draw(58,45)
		call line.draw(50,0)
	endif
	rect 64,56 solid ink 0 to 192,184
	rect 64,56 frame ink 7 to 192,184
endproc
'
'		line.draw drawer, support routine for room draw, draws in four quadrants
'
proc line.draw(x,y)
	local x1,y1:x1 = x*2+128:y1 = y*2+120
	if cx >= 0
		if y <> 0
			line 128,120 to x1,y1:line 128,120 to 256-x1,y1
			line  128,239-120 to x1,239-y1:line 128,239-120 to 256-x1,239-y1
		endif
		line cx,cy to x1,y1
		line 256-cx,cy to 256-x1,y1
		line cx,239-cy to x1,239-y1
		line 256-cx,239-cy to 256-x1,239-y1
	endif
	cx = x1:cy = y1
endproc
'
'		random functions
'
proc random.seed(n)
	seed = n 
endproc
'
proc random.next()
	local i,bit0
	if seed = 0 then seed = $12345678
	for i = 1 to 4
		bit0 = seed & 1
		seed = seed >> 1
		if bit0 then seed = seed ^ $B400
	next
endproc
