'
'	Galaxians : by Paul Robson.
'
call Initialise()

score = 0
call DrawGame()
call ResetAttackers()
call MoveFormation()
tMoveForm = 0:tMoveDive = 0:tLaunch = 0:launchGap = 100
repeat
	if event(tMoveForm,40) then call MoveFormation():call AnimateStars()
	if event(tMoveDive,5) then if attCount<>0 then call MoveAttackers()
	if event(tLaunch,100) then launchGap = 50 + rand(150):if remaining > 0 then call LaunchGroup()
until false
end
'
'		Initialisation
'
proc Initialise()
	local i
	gload "galaxians.gfx"
	dim status(47+4): ' 8 x 6 array of ships. 0 = not present, 1 = in formation, 2 = attacking. top down
	dim xShip(47),yShip(47),xiShip(47): ' position of ship if attacking
	dim attackers(24): ' active attackers, updated by MoveFormation()
	dim graphics(5):for i = 0 to 5:read graphics(i):next:data $8C,$80,$88,$84,$84,$84	
endproc
'
'		Draw Background etc.
'
proc DrawGame()
	local i
	cls:sprite clear
	for i = 1 to 200
		plot ink rand(8)+8 to rand(320),rand(240)
	next
	for i = 8 to 15:palette i,0,0,0:next
	text "1UP" solid ink 1 to 151,1
	call DrawScore()
endproc
'
'		Update Score
'
proc DrawScore()
	rect 142,9 ink 0 to 178,17
	text right$("00000"+str$(score),6) ink 3 to 142,9
endproc
'
'		Animate Stars
'
proc AnimateStars()
	palette animStar+8,0,0,0
	animStar = (animStar + 1) & 7
	palette animStar+8,255,255,255
	palette ((animStar+1) & 7)+8,192,192,192
	palette ((animStar+2) & 7)+8,128,128,128
	palette ((animStar+3) & 7)+8,64,64,64
endproc
'
'		Reset attackers.
'
proc ResetAttackers()
	local i
	for i = 0 to 7:status(i) = 0:next
	for i = 8 to 47:status(i) = 1:next
	status(2) = 1:status(5) = 1
	status(8) = 0:status(9) = 0:status(14) = 0:status(15) = 0
	status(16) = 0:status(23) = 0
	xCentre = 160:xCentreStep = 2:attCount = 0:formCount = 0
	remaining = 0
	for i = 0 to 47:remaining = remaining+status(i):next
	call MoveFormation()
endproc
'
'		Reposition formation, also tracks those in attack mode.
'
proc MoveFormation()
	local r,p,x,y,c
	formCount = formCount + 1
	xCentre = xCentre + xCentreStep
	if xCentre <= 100 | xCentre >= 220 then xCentreStep = -xCentreStep
	attcount = 0
	for r = 0 to 5
		p = r * 8:
		img = graphics(r) + (formCount & 1)
		x = xCentre - 16 * 7 \ 2
		y = 28 + r * 12
		for c = 0 to 7
			if status(p) = 1 then sprite p image img to x,y
			if status(p) = 2 then if attCount < 24 then attCount = attCount + 1:attackers(attCount) = p
			p = p + 1:x = x + 16
		next
	next
endproc
'
'		Launch a group
'
proc LaunchGroup()
	local n,x,y
	repeat n = rand(48):until status(n) <> 0
	if status(n) = 1 
		call Launch(n)
		x = n & 7:y = n >> 3
		if y < 5
			if x > 0 & status(n+7) = 1 then call Launch(n+7)
			if x < 7 & status(n+9) = 1 then call Launch(n+9)
		endif
	endif
endproc
'
'		Launch a ship
'
proc Launch(n)
	assert status(n) = 1
	status(n) = 2
	xShip(n) = spritex(n)
	yShip(n) = spritey(n)
	sprite n image graphics(n\8)+2
	xiShip(n) = -4
	if xShip(n) >= 160 then xiShip(n) = abs(xiShip(n)):sprite n flip 1
endproc
'
'		Move attackers.
'
proc MoveAttackers()
	for i = 1 to attCount
		n = attackers(i)
		if status(n) = 2 
			xShip(n) = xShip(n) + xiShip(n)
			yShip(n) = yShip(n) + 2
			if xShip(n) < 8 | xShip(n) > 312 then call FlipAttacker(n)
			sprite n to xShip(n),yShip(n)
			if yShip(n) > 230 then status(n) = 1
		endif
	next
endproc
'
'		Flip attacker horizontally.
'
proc FlipAttacker(n)
	xiShip(n) = -xiShip(n)
	if xiShip(n) > 0:sprite n flip 1:else:sprite n flip 0:endif
endproc
