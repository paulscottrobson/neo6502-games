'
'	Assembler routines
'
proc Machine.Code()
	memSize = 1024
	codeSpace = alloc(memSize)
	oList = $FE:ob1 = $FC:ob2 = $FA:temp = $F9:nearest = alloc(6)
	CParam = $FF04
	for pass = 0 to 1
		o = pass * 1:p = codeSpace
		call AsmMoveDrawCurrent()
		call AsmMoveDrawAll()
		call AsmCalculateDistance()
		call AsmCalculateNearest()
	next
	assert p-codeSpace+128 < memSize
endproc
'
proc AsmMoveDrawAll()
	.ASMoveDrawAll
		dec
		pha:jsr ASMoveDraw:pla
		cmp #0:bne ASMoveDrawAll
		rts
endproc
'
proc AsmMoveDrawCurrent()

	.ASMoveDraw
		asl:tay
		lda (oList),y:sta ob1:clc:adc #2:sta ob2
		iny:lda (oList),y:sta ob1+1:adc #0:sta ob2+1
		lda (ob1):beq ASMDExit

		' Move
		ldy #2:ldx #160:jsr ASMAdd
		ldy #6:ldx #120:jsr ASMAdd


		' Process the left/right wrap
		ldy #3
		lda (ob1),y
		cmp #168:bcc ASNotOver1:cmp #248:bcs ASNotOver1
		adc #248-168:bmi ASNotOver1:sbc # (248-168)*2
	.ASNotOver1
		sta (ob1),y

		' Process the up/down wrap
		ldy #7:lda (ob1),y:and #$7F:sta (ob1),y

		' Repaint
		ldy #12:lda (ob1),y:sta CParam+0
		ldy #2:lda (ob1),y:asl:iny:lda (ob1),y:rol
		sta CParam+1:lda #0:adc #0:sta CParam+2
		ldy #6:lda (ob1),y:asl:iny:lda (ob1),y:rol
		sta CParam+3:stz CParam+4
		lda (ob1):and #$7F:sta CParam+5
		stz CParam+6:stz CParam+7
		call Send.Message(6,2)
	.ASMDExit		
		rts
	.ASMAdd
		clc
		lda (ob1),y:adc (ob2),y:sta (ob1),y
		iny
		lda (ob1),y:adc (ob2),y:sta (ob1),y
		rts
endproc
'
proc ASMCalculateDistance()

	.ASCalculateDistance
		phx:ldx #ob1:jsr ASCDSetRecord
		pla:ldx #ob2:jsr ASCDSetRecord
		lda (ob1):beq ASCDMiss:lda (ob2):beq ASCDMiss

		ldy #1*2+1:jsr ASCDDistance:sta temp
		ldy #3*2+1:jsr ASCDDistance
		clc:adc temp:lsr:sta temp:rts
	.ASCDMiss
		lda #$FF:sta temp:rts

	.ASCDSetRecord
		asl:tay
		lda (oList),y:sta 0,x:iny:lda (oList),y:sta 1,x
		rts

	.ASCDDistance
		sec:lda (ob1),y:sbc (ob2),y:bpl ASCDPositive:eor #$FF:inc
	.ASCDPositive
		rts

endproc
'
proc AsmCalculateNearest()
	.ASCalculateNearest
		pha
		stz nearest:stz nearest+1
		lda #$FF:sta nearest+2:stz nearest+3
		stz nearest+4:stz nearest+5
		ldx #5
	.ASCNLoop
		pla:pha:phx
		jsr ASCalculateDistance
		plx:cmp #$FF:beq ASCNNotNearer
	
		cmp nearest+2:bcs ASCNNotNearer
		sta nearest+2:stx nearest+0
		ldy #14:lda (ob2),y:asl:adc #2:sta nearest+4
	.ASCNNotNearer
		inx:cpx #maxObjects:bne ASCNLoop		
		pla:rts
endproc
'
proc Debug()
	poke p,3:p = p + 1
endproc
'
proc Send.Message(group,func)
	jsr 	$FFF7
	poke p,group:poke p+1,func:p = p + 2
	jsr 	$FFF4
endproc